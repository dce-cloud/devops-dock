volumes:
  mongo-data:
    driver: ${VOLUMES_DRIVER}
  mongo4-data:
    driver: ${VOLUMES_DRIVER}
  mongo7-data:
    driver: ${VOLUMES_DRIVER}
  liyue-mongo-data:
    driver: ${VOLUMES_DRIVER}
  qingqiu-mongo-data:
    driver: ${VOLUMES_DRIVER}

services:

### Mongo ################################################
  mongo:
    build:
      context: ${MONGO_HOST_PATH}
      dockerfile: ./_context/Dockerfile
      args:
        DOCKER_REGISTRY_URL: ${DOCKER_REGISTRY_URL}
        MONGO_VERSION: ${MONGO_VERSION}
    hostname: ${MONGO_HOSTNAME}
    container_name: ${MONGO_CONTAINER_NAME}
    restart: ${DOCKER_RESTART_POLICY}
    volumes:
      - "mongo-data:/data"
      - "${MONGO_HOST_PATH}/mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    ports:
      - "${MONGO_HOST_PORT}:27017"
    environment:
      TZ: "${TZ}"
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      backend:
        ipv4_address: ${MONGO_BACKEND_IP}
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO_USERNAME}", "--password", "${MONGO_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s

### Mongo7 ################################################
  mongo7:
    build:
      context: ${MONGO7_HOST_PATH}
      dockerfile: ./_context/Dockerfile
      args:
        DOCKER_REGISTRY_URL: ${DOCKER_REGISTRY_URL}
        MONGO_VERSION: ${MONGO7_VERSION}
    hostname: ${MONGO7_HOSTNAME}
    container_name: ${MONGO7_CONTAINER_NAME}
    restart: ${DOCKER_RESTART_POLICY}
    volumes:
      - "mongo7-data:/data"
      - "${MONGO7_HOST_PATH}/mongo7/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    ports:
      - "${MONGO7_HOST_PORT}:27017"
    environment:
      TZ: "${TZ}"
      MONGO_INITDB_ROOT_USERNAME: ${MONGO7_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO7_PASSWORD}
    networks:
      backend:
        ipv4_address: ${MONGO7_BACKEND_IP}
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO7_USERNAME}", "--password", "${MONGO7_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s

  ### Mongo4 ################################################
  mongo4:
    build:
      context: ${MONGO4_HOST_PATH}
      dockerfile: ./_context/Dockerfile
      args:
        DOCKER_REGISTRY_URL: ${DOCKER_REGISTRY_URL}
        MONGO_VERSION: ${MONGO4_VERSION}
    hostname: ${MONGO4_HOSTNAME}
    container_name: ${MONGO4_CONTAINER_NAME}
    restart: ${DOCKER_RESTART_POLICY}
    volumes:
      - "mongo4-data:/data"
      - "${MONGO4_HOST_PATH}/mongo4/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    ports:
      - "${MONGO4_HOST_PORT}:27017"
    environment:
      TZ: "${TZ}"
      MONGO_INITDB_ROOT_USERNAME: ${MONGO4_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO4_PASSWORD}
    networks:
      backend:
        ipv4_address: ${MONGO4_BACKEND_IP}
    healthcheck:
      test: ["CMD", "mongo", "--username", "${MONGO4_USERNAME}", "--password", "${MONGO4_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s

  ### LIYUE MONGO ################################################
  liyue-mongo:
    build:
      context: ${LIYUE_MONGO_HOST_PATH}
      dockerfile: ./_context/Dockerfile
      args:
        DOCKER_REGISTRY_URL: ${DOCKER_REGISTRY_URL}
        MONGO_VERSION: ${LIYUE_MONGO_VERSION}
    hostname: ${LIYUE_MONGO_HOSTNAME}
    container_name: ${LIYUE_MONGO_CONTAINER_NAME}
    restart: ${DOCKER_RESTART_POLICY}
    volumes:
      - "liyue-mongo-data:/data"
      - "${LIYUE_MONGO_HOST_PATH}/liyue/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    ports:
      - "${LIYUE_MONGO_HOST_PORT}:27017"
    environment:
      TZ: "${TZ}"
      MONGO_INITDB_ROOT_USERNAME: ${LIYUE_MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${LIYUE_MONGO_PASSWORD}
    networks:
      backend:
        ipv4_address: ${LIYUE_MONGO_BACKEND_IP}
    healthcheck:
      test: ["CMD", "mongo", "--username", "${LIYUE_MONGO_USERNAME}", "--password", "${LIYUE_MONGO_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s

  ### QINGQIU MONGO ################################################
  qingqiu-mongo:
    build:
      context: ${QINGQIU_MONGO_HOST_PATH}
      dockerfile: ./_context/Dockerfile
      args:
        DOCKER_REGISTRY_URL: ${DOCKER_REGISTRY_URL}
        MONGO_VERSION: ${QINGQIU_MONGO_VERSION}
    hostname: ${QINGQIU_MONGO_HOSTNAME}
    container_name: ${QINGQIU_MONGO_CONTAINER_NAME}
    restart: ${DOCKER_RESTART_POLICY}
    volumes:
      - "qingqiu-mongo-data:/data"
      - "${QINGQIU_MONGO_HOST_PATH}/qingqiu/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    ports:
      - "${QINGQIU_MONGO_HOST_PORT}:27017"
    environment:
      TZ: "${TZ}"
      MONGO_INITDB_ROOT_USERNAME: ${QINGQIU_MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${QINGQIU_MONGO_PASSWORD}
    networks:
      backend:
        ipv4_address: ${QINGQIU_MONGO_BACKEND_IP}
    healthcheck:
      test: ["CMD", "mongo", "--username", "${QINGQIU_MONGO_USERNAME}", "--password", "${QINGQIU_MONGO_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s